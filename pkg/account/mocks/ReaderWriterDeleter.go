// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import account "github.com/Optum/dce/pkg/account"
import mock "github.com/stretchr/testify/mock"

// ReaderWriterDeleter is an autogenerated mock type for the ReaderWriterDeleter type
type ReaderWriterDeleter struct {
	mock.Mock
}

// Delete provides a mock function with given fields: i
func (_m *ReaderWriterDeleter) Delete(i *account.Account) error {
	ret := _m.Called(i)

	var r0 error
	if rf, ok := ret.Get(0).(func(*account.Account) error); ok {
		r0 = rf(i)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: ID
func (_m *ReaderWriterDeleter) Get(ID string) (*account.Account, error) {
	ret := _m.Called(ID)

	var r0 *account.Account
	if rf, ok := ret.Get(0).(func(string) *account.Account); ok {
		r0 = rf(ID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*account.Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: query
func (_m *ReaderWriterDeleter) List(query *account.Account) (*account.Accounts, error) {
	ret := _m.Called(query)

	var r0 *account.Accounts
	if rf, ok := ret.Get(0).(func(*account.Account) *account.Accounts); ok {
		r0 = rf(query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*account.Accounts)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*account.Account) error); ok {
		r1 = rf(query)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Write provides a mock function with given fields: i, lastModifiedOn
func (_m *ReaderWriterDeleter) Write(i *account.Account, lastModifiedOn *int64) error {
	ret := _m.Called(i, lastModifiedOn)

	var r0 error
	if rf, ok := ret.Get(0).(func(*account.Account, *int64) error); ok {
		r0 = rf(i, lastModifiedOn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
