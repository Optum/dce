// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	api "github.com/Optum/Redbox/pkg/api"
	events "github.com/aws/aws-lambda-go/events"

	mock "github.com/stretchr/testify/mock"
)

// UserDetailer is an autogenerated mock type for the UserDetailer type
type UserDetailer struct {
	mock.Mock
}

// GetUser provides a mock function with given fields: event
func (_m *UserDetailer) GetUser(event *events.APIGatewayProxyRequest) *api.User {
	ret := _m.Called(event)

	var r0 *api.User
	if rf, ok := ret.Get(0).(func(*events.APIGatewayProxyRequest) *api.User); ok {
		r0 = rf(event)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.User)
		}
	}

	return r0
}

// isUserInAdminFromList provides a mock function with given fields: groups
func (_m *UserDetailer) isUserInAdminFromList(groups *string) bool {
	ret := _m.Called(groups)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*string) bool); ok {
		r0 = rf(groups)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// isUserInAdminGroup provides a mock function with given fields: username
func (_m *UserDetailer) isUserInAdminGroup(username string) (bool, error) {
	ret := _m.Called(username)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(username)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(username)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
