// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	awsiface "github.com/Optum/dce/pkg/awsiface"
	mock "github.com/stretchr/testify/mock"

	rolemanager "github.com/Optum/dce/pkg/rolemanager"
)

// PolicyManager is an autogenerated mock type for the PolicyManager type
type PolicyManager struct {
	mock.Mock
}

// DeletePolicyVersion provides a mock function with given fields: arn, versionID
func (_m *PolicyManager) DeletePolicyVersion(arn string, versionID string) error {
	ret := _m.Called(arn, versionID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(arn, versionID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MergePolicy provides a mock function with given fields: input
func (_m *PolicyManager) MergePolicy(input *rolemanager.MergePolicyInput) error {
	ret := _m.Called(input)

	var r0 error
	if rf, ok := ret.Get(0).(func(*rolemanager.MergePolicyInput) error); ok {
		r0 = rf(input)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PrunePolicyVersions provides a mock function with given fields: arn
func (_m *PolicyManager) PrunePolicyVersions(arn string) error {
	ret := _m.Called(arn)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(arn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetIAMClient provides a mock function with given fields: iamClient
func (_m *PolicyManager) SetIAMClient(iamClient awsiface.IAM) {
	_m.Called(iamClient)
}
