// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import lease "github.com/Optum/dce/pkg/lease"
import mock "github.com/stretchr/testify/mock"

// Eventer is an autogenerated mock type for the Eventer type
type Eventer struct {
	mock.Mock
}

// LeaseCreate provides a mock function with given fields: account
func (_m *Eventer) LeaseCreate(account *lease.Lease) error {
	ret := _m.Called(account)

	var r0 error
	if rf, ok := ret.Get(0).(func(*lease.Lease) error); ok {
		r0 = rf(account)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LeaseEnd provides a mock function with given fields: account
func (_m *Eventer) LeaseEnd(account *lease.Lease) error {
	ret := _m.Called(account)

	var r0 error
	if rf, ok := ret.Get(0).(func(*lease.Lease) error); ok {
		r0 = rf(account)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LeaseUpdate provides a mock function with given fields: old, new
func (_m *Eventer) LeaseUpdate(old *lease.Lease, new *lease.Lease) error {
	ret := _m.Called(old, new)

	var r0 error
	if rf, ok := ret.Get(0).(func(*lease.Lease, *lease.Lease) error); ok {
		r0 = rf(old, new)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
