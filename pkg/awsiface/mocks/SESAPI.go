// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	request "github.com/aws/aws-sdk-go/aws/request"
	mock "github.com/stretchr/testify/mock"

	ses "github.com/aws/aws-sdk-go/service/ses"
)

// SESAPI is an autogenerated mock type for the SESAPI type
type SESAPI struct {
	mock.Mock
}

// CloneReceiptRuleSet provides a mock function with given fields: _a0
func (_m *SESAPI) CloneReceiptRuleSet(_a0 *ses.CloneReceiptRuleSetInput) (*ses.CloneReceiptRuleSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.CloneReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(*ses.CloneReceiptRuleSetInput) *ses.CloneReceiptRuleSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CloneReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.CloneReceiptRuleSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CloneReceiptRuleSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) CloneReceiptRuleSetRequest(_a0 *ses.CloneReceiptRuleSetInput) (*request.Request, *ses.CloneReceiptRuleSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.CloneReceiptRuleSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.CloneReceiptRuleSetOutput
	if rf, ok := ret.Get(1).(func(*ses.CloneReceiptRuleSetInput) *ses.CloneReceiptRuleSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.CloneReceiptRuleSetOutput)
		}
	}

	return r0, r1
}

// CloneReceiptRuleSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) CloneReceiptRuleSetWithContext(_a0 context.Context, _a1 *ses.CloneReceiptRuleSetInput, _a2 ...request.Option) (*ses.CloneReceiptRuleSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.CloneReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.CloneReceiptRuleSetInput, ...request.Option) *ses.CloneReceiptRuleSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CloneReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.CloneReceiptRuleSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateConfigurationSet provides a mock function with given fields: _a0
func (_m *SESAPI) CreateConfigurationSet(_a0 *ses.CreateConfigurationSetInput) (*ses.CreateConfigurationSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.CreateConfigurationSetOutput
	if rf, ok := ret.Get(0).(func(*ses.CreateConfigurationSetInput) *ses.CreateConfigurationSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateConfigurationSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.CreateConfigurationSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateConfigurationSetEventDestination provides a mock function with given fields: _a0
func (_m *SESAPI) CreateConfigurationSetEventDestination(_a0 *ses.CreateConfigurationSetEventDestinationInput) (*ses.CreateConfigurationSetEventDestinationOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.CreateConfigurationSetEventDestinationOutput
	if rf, ok := ret.Get(0).(func(*ses.CreateConfigurationSetEventDestinationInput) *ses.CreateConfigurationSetEventDestinationOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateConfigurationSetEventDestinationOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.CreateConfigurationSetEventDestinationInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateConfigurationSetEventDestinationRequest provides a mock function with given fields: _a0
func (_m *SESAPI) CreateConfigurationSetEventDestinationRequest(_a0 *ses.CreateConfigurationSetEventDestinationInput) (*request.Request, *ses.CreateConfigurationSetEventDestinationOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.CreateConfigurationSetEventDestinationInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.CreateConfigurationSetEventDestinationOutput
	if rf, ok := ret.Get(1).(func(*ses.CreateConfigurationSetEventDestinationInput) *ses.CreateConfigurationSetEventDestinationOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.CreateConfigurationSetEventDestinationOutput)
		}
	}

	return r0, r1
}

// CreateConfigurationSetEventDestinationWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) CreateConfigurationSetEventDestinationWithContext(_a0 context.Context, _a1 *ses.CreateConfigurationSetEventDestinationInput, _a2 ...request.Option) (*ses.CreateConfigurationSetEventDestinationOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.CreateConfigurationSetEventDestinationOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.CreateConfigurationSetEventDestinationInput, ...request.Option) *ses.CreateConfigurationSetEventDestinationOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateConfigurationSetEventDestinationOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.CreateConfigurationSetEventDestinationInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateConfigurationSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) CreateConfigurationSetRequest(_a0 *ses.CreateConfigurationSetInput) (*request.Request, *ses.CreateConfigurationSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.CreateConfigurationSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.CreateConfigurationSetOutput
	if rf, ok := ret.Get(1).(func(*ses.CreateConfigurationSetInput) *ses.CreateConfigurationSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.CreateConfigurationSetOutput)
		}
	}

	return r0, r1
}

// CreateConfigurationSetTrackingOptions provides a mock function with given fields: _a0
func (_m *SESAPI) CreateConfigurationSetTrackingOptions(_a0 *ses.CreateConfigurationSetTrackingOptionsInput) (*ses.CreateConfigurationSetTrackingOptionsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.CreateConfigurationSetTrackingOptionsOutput
	if rf, ok := ret.Get(0).(func(*ses.CreateConfigurationSetTrackingOptionsInput) *ses.CreateConfigurationSetTrackingOptionsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateConfigurationSetTrackingOptionsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.CreateConfigurationSetTrackingOptionsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateConfigurationSetTrackingOptionsRequest provides a mock function with given fields: _a0
func (_m *SESAPI) CreateConfigurationSetTrackingOptionsRequest(_a0 *ses.CreateConfigurationSetTrackingOptionsInput) (*request.Request, *ses.CreateConfigurationSetTrackingOptionsOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.CreateConfigurationSetTrackingOptionsInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.CreateConfigurationSetTrackingOptionsOutput
	if rf, ok := ret.Get(1).(func(*ses.CreateConfigurationSetTrackingOptionsInput) *ses.CreateConfigurationSetTrackingOptionsOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.CreateConfigurationSetTrackingOptionsOutput)
		}
	}

	return r0, r1
}

// CreateConfigurationSetTrackingOptionsWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) CreateConfigurationSetTrackingOptionsWithContext(_a0 context.Context, _a1 *ses.CreateConfigurationSetTrackingOptionsInput, _a2 ...request.Option) (*ses.CreateConfigurationSetTrackingOptionsOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.CreateConfigurationSetTrackingOptionsOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.CreateConfigurationSetTrackingOptionsInput, ...request.Option) *ses.CreateConfigurationSetTrackingOptionsOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateConfigurationSetTrackingOptionsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.CreateConfigurationSetTrackingOptionsInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateConfigurationSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) CreateConfigurationSetWithContext(_a0 context.Context, _a1 *ses.CreateConfigurationSetInput, _a2 ...request.Option) (*ses.CreateConfigurationSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.CreateConfigurationSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.CreateConfigurationSetInput, ...request.Option) *ses.CreateConfigurationSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateConfigurationSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.CreateConfigurationSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateCustomVerificationEmailTemplate provides a mock function with given fields: _a0
func (_m *SESAPI) CreateCustomVerificationEmailTemplate(_a0 *ses.CreateCustomVerificationEmailTemplateInput) (*ses.CreateCustomVerificationEmailTemplateOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.CreateCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(0).(func(*ses.CreateCustomVerificationEmailTemplateInput) *ses.CreateCustomVerificationEmailTemplateOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateCustomVerificationEmailTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.CreateCustomVerificationEmailTemplateInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateCustomVerificationEmailTemplateRequest provides a mock function with given fields: _a0
func (_m *SESAPI) CreateCustomVerificationEmailTemplateRequest(_a0 *ses.CreateCustomVerificationEmailTemplateInput) (*request.Request, *ses.CreateCustomVerificationEmailTemplateOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.CreateCustomVerificationEmailTemplateInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.CreateCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(1).(func(*ses.CreateCustomVerificationEmailTemplateInput) *ses.CreateCustomVerificationEmailTemplateOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.CreateCustomVerificationEmailTemplateOutput)
		}
	}

	return r0, r1
}

// CreateCustomVerificationEmailTemplateWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) CreateCustomVerificationEmailTemplateWithContext(_a0 context.Context, _a1 *ses.CreateCustomVerificationEmailTemplateInput, _a2 ...request.Option) (*ses.CreateCustomVerificationEmailTemplateOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.CreateCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.CreateCustomVerificationEmailTemplateInput, ...request.Option) *ses.CreateCustomVerificationEmailTemplateOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateCustomVerificationEmailTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.CreateCustomVerificationEmailTemplateInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateReceiptFilter provides a mock function with given fields: _a0
func (_m *SESAPI) CreateReceiptFilter(_a0 *ses.CreateReceiptFilterInput) (*ses.CreateReceiptFilterOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.CreateReceiptFilterOutput
	if rf, ok := ret.Get(0).(func(*ses.CreateReceiptFilterInput) *ses.CreateReceiptFilterOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateReceiptFilterOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.CreateReceiptFilterInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateReceiptFilterRequest provides a mock function with given fields: _a0
func (_m *SESAPI) CreateReceiptFilterRequest(_a0 *ses.CreateReceiptFilterInput) (*request.Request, *ses.CreateReceiptFilterOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.CreateReceiptFilterInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.CreateReceiptFilterOutput
	if rf, ok := ret.Get(1).(func(*ses.CreateReceiptFilterInput) *ses.CreateReceiptFilterOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.CreateReceiptFilterOutput)
		}
	}

	return r0, r1
}

// CreateReceiptFilterWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) CreateReceiptFilterWithContext(_a0 context.Context, _a1 *ses.CreateReceiptFilterInput, _a2 ...request.Option) (*ses.CreateReceiptFilterOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.CreateReceiptFilterOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.CreateReceiptFilterInput, ...request.Option) *ses.CreateReceiptFilterOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateReceiptFilterOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.CreateReceiptFilterInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateReceiptRule provides a mock function with given fields: _a0
func (_m *SESAPI) CreateReceiptRule(_a0 *ses.CreateReceiptRuleInput) (*ses.CreateReceiptRuleOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.CreateReceiptRuleOutput
	if rf, ok := ret.Get(0).(func(*ses.CreateReceiptRuleInput) *ses.CreateReceiptRuleOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateReceiptRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.CreateReceiptRuleInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateReceiptRuleRequest provides a mock function with given fields: _a0
func (_m *SESAPI) CreateReceiptRuleRequest(_a0 *ses.CreateReceiptRuleInput) (*request.Request, *ses.CreateReceiptRuleOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.CreateReceiptRuleInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.CreateReceiptRuleOutput
	if rf, ok := ret.Get(1).(func(*ses.CreateReceiptRuleInput) *ses.CreateReceiptRuleOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.CreateReceiptRuleOutput)
		}
	}

	return r0, r1
}

// CreateReceiptRuleSet provides a mock function with given fields: _a0
func (_m *SESAPI) CreateReceiptRuleSet(_a0 *ses.CreateReceiptRuleSetInput) (*ses.CreateReceiptRuleSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.CreateReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(*ses.CreateReceiptRuleSetInput) *ses.CreateReceiptRuleSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.CreateReceiptRuleSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateReceiptRuleSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) CreateReceiptRuleSetRequest(_a0 *ses.CreateReceiptRuleSetInput) (*request.Request, *ses.CreateReceiptRuleSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.CreateReceiptRuleSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.CreateReceiptRuleSetOutput
	if rf, ok := ret.Get(1).(func(*ses.CreateReceiptRuleSetInput) *ses.CreateReceiptRuleSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.CreateReceiptRuleSetOutput)
		}
	}

	return r0, r1
}

// CreateReceiptRuleSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) CreateReceiptRuleSetWithContext(_a0 context.Context, _a1 *ses.CreateReceiptRuleSetInput, _a2 ...request.Option) (*ses.CreateReceiptRuleSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.CreateReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.CreateReceiptRuleSetInput, ...request.Option) *ses.CreateReceiptRuleSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.CreateReceiptRuleSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateReceiptRuleWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) CreateReceiptRuleWithContext(_a0 context.Context, _a1 *ses.CreateReceiptRuleInput, _a2 ...request.Option) (*ses.CreateReceiptRuleOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.CreateReceiptRuleOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.CreateReceiptRuleInput, ...request.Option) *ses.CreateReceiptRuleOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateReceiptRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.CreateReceiptRuleInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateTemplate provides a mock function with given fields: _a0
func (_m *SESAPI) CreateTemplate(_a0 *ses.CreateTemplateInput) (*ses.CreateTemplateOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.CreateTemplateOutput
	if rf, ok := ret.Get(0).(func(*ses.CreateTemplateInput) *ses.CreateTemplateOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.CreateTemplateInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateTemplateRequest provides a mock function with given fields: _a0
func (_m *SESAPI) CreateTemplateRequest(_a0 *ses.CreateTemplateInput) (*request.Request, *ses.CreateTemplateOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.CreateTemplateInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.CreateTemplateOutput
	if rf, ok := ret.Get(1).(func(*ses.CreateTemplateInput) *ses.CreateTemplateOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.CreateTemplateOutput)
		}
	}

	return r0, r1
}

// CreateTemplateWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) CreateTemplateWithContext(_a0 context.Context, _a1 *ses.CreateTemplateInput, _a2 ...request.Option) (*ses.CreateTemplateOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.CreateTemplateOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.CreateTemplateInput, ...request.Option) *ses.CreateTemplateOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.CreateTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.CreateTemplateInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConfigurationSet provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteConfigurationSet(_a0 *ses.DeleteConfigurationSetInput) (*ses.DeleteConfigurationSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteConfigurationSetOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteConfigurationSetInput) *ses.DeleteConfigurationSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteConfigurationSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteConfigurationSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConfigurationSetEventDestination provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteConfigurationSetEventDestination(_a0 *ses.DeleteConfigurationSetEventDestinationInput) (*ses.DeleteConfigurationSetEventDestinationOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteConfigurationSetEventDestinationOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteConfigurationSetEventDestinationInput) *ses.DeleteConfigurationSetEventDestinationOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteConfigurationSetEventDestinationOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteConfigurationSetEventDestinationInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConfigurationSetEventDestinationRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteConfigurationSetEventDestinationRequest(_a0 *ses.DeleteConfigurationSetEventDestinationInput) (*request.Request, *ses.DeleteConfigurationSetEventDestinationOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteConfigurationSetEventDestinationInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteConfigurationSetEventDestinationOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteConfigurationSetEventDestinationInput) *ses.DeleteConfigurationSetEventDestinationOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteConfigurationSetEventDestinationOutput)
		}
	}

	return r0, r1
}

// DeleteConfigurationSetEventDestinationWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteConfigurationSetEventDestinationWithContext(_a0 context.Context, _a1 *ses.DeleteConfigurationSetEventDestinationInput, _a2 ...request.Option) (*ses.DeleteConfigurationSetEventDestinationOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteConfigurationSetEventDestinationOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteConfigurationSetEventDestinationInput, ...request.Option) *ses.DeleteConfigurationSetEventDestinationOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteConfigurationSetEventDestinationOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteConfigurationSetEventDestinationInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConfigurationSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteConfigurationSetRequest(_a0 *ses.DeleteConfigurationSetInput) (*request.Request, *ses.DeleteConfigurationSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteConfigurationSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteConfigurationSetOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteConfigurationSetInput) *ses.DeleteConfigurationSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteConfigurationSetOutput)
		}
	}

	return r0, r1
}

// DeleteConfigurationSetTrackingOptions provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteConfigurationSetTrackingOptions(_a0 *ses.DeleteConfigurationSetTrackingOptionsInput) (*ses.DeleteConfigurationSetTrackingOptionsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteConfigurationSetTrackingOptionsOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteConfigurationSetTrackingOptionsInput) *ses.DeleteConfigurationSetTrackingOptionsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteConfigurationSetTrackingOptionsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteConfigurationSetTrackingOptionsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConfigurationSetTrackingOptionsRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteConfigurationSetTrackingOptionsRequest(_a0 *ses.DeleteConfigurationSetTrackingOptionsInput) (*request.Request, *ses.DeleteConfigurationSetTrackingOptionsOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteConfigurationSetTrackingOptionsInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteConfigurationSetTrackingOptionsOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteConfigurationSetTrackingOptionsInput) *ses.DeleteConfigurationSetTrackingOptionsOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteConfigurationSetTrackingOptionsOutput)
		}
	}

	return r0, r1
}

// DeleteConfigurationSetTrackingOptionsWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteConfigurationSetTrackingOptionsWithContext(_a0 context.Context, _a1 *ses.DeleteConfigurationSetTrackingOptionsInput, _a2 ...request.Option) (*ses.DeleteConfigurationSetTrackingOptionsOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteConfigurationSetTrackingOptionsOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteConfigurationSetTrackingOptionsInput, ...request.Option) *ses.DeleteConfigurationSetTrackingOptionsOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteConfigurationSetTrackingOptionsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteConfigurationSetTrackingOptionsInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConfigurationSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteConfigurationSetWithContext(_a0 context.Context, _a1 *ses.DeleteConfigurationSetInput, _a2 ...request.Option) (*ses.DeleteConfigurationSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteConfigurationSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteConfigurationSetInput, ...request.Option) *ses.DeleteConfigurationSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteConfigurationSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteConfigurationSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteCustomVerificationEmailTemplate provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteCustomVerificationEmailTemplate(_a0 *ses.DeleteCustomVerificationEmailTemplateInput) (*ses.DeleteCustomVerificationEmailTemplateOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteCustomVerificationEmailTemplateInput) *ses.DeleteCustomVerificationEmailTemplateOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteCustomVerificationEmailTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteCustomVerificationEmailTemplateInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteCustomVerificationEmailTemplateRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteCustomVerificationEmailTemplateRequest(_a0 *ses.DeleteCustomVerificationEmailTemplateInput) (*request.Request, *ses.DeleteCustomVerificationEmailTemplateOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteCustomVerificationEmailTemplateInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteCustomVerificationEmailTemplateInput) *ses.DeleteCustomVerificationEmailTemplateOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteCustomVerificationEmailTemplateOutput)
		}
	}

	return r0, r1
}

// DeleteCustomVerificationEmailTemplateWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteCustomVerificationEmailTemplateWithContext(_a0 context.Context, _a1 *ses.DeleteCustomVerificationEmailTemplateInput, _a2 ...request.Option) (*ses.DeleteCustomVerificationEmailTemplateOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteCustomVerificationEmailTemplateInput, ...request.Option) *ses.DeleteCustomVerificationEmailTemplateOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteCustomVerificationEmailTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteCustomVerificationEmailTemplateInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteIdentity provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteIdentity(_a0 *ses.DeleteIdentityInput) (*ses.DeleteIdentityOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteIdentityOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteIdentityInput) *ses.DeleteIdentityOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteIdentityOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteIdentityInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteIdentityPolicy provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteIdentityPolicy(_a0 *ses.DeleteIdentityPolicyInput) (*ses.DeleteIdentityPolicyOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteIdentityPolicyOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteIdentityPolicyInput) *ses.DeleteIdentityPolicyOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteIdentityPolicyOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteIdentityPolicyInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteIdentityPolicyRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteIdentityPolicyRequest(_a0 *ses.DeleteIdentityPolicyInput) (*request.Request, *ses.DeleteIdentityPolicyOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteIdentityPolicyInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteIdentityPolicyOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteIdentityPolicyInput) *ses.DeleteIdentityPolicyOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteIdentityPolicyOutput)
		}
	}

	return r0, r1
}

// DeleteIdentityPolicyWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteIdentityPolicyWithContext(_a0 context.Context, _a1 *ses.DeleteIdentityPolicyInput, _a2 ...request.Option) (*ses.DeleteIdentityPolicyOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteIdentityPolicyOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteIdentityPolicyInput, ...request.Option) *ses.DeleteIdentityPolicyOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteIdentityPolicyOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteIdentityPolicyInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteIdentityRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteIdentityRequest(_a0 *ses.DeleteIdentityInput) (*request.Request, *ses.DeleteIdentityOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteIdentityInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteIdentityOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteIdentityInput) *ses.DeleteIdentityOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteIdentityOutput)
		}
	}

	return r0, r1
}

// DeleteIdentityWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteIdentityWithContext(_a0 context.Context, _a1 *ses.DeleteIdentityInput, _a2 ...request.Option) (*ses.DeleteIdentityOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteIdentityOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteIdentityInput, ...request.Option) *ses.DeleteIdentityOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteIdentityOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteIdentityInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteReceiptFilter provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteReceiptFilter(_a0 *ses.DeleteReceiptFilterInput) (*ses.DeleteReceiptFilterOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteReceiptFilterOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteReceiptFilterInput) *ses.DeleteReceiptFilterOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteReceiptFilterOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteReceiptFilterInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteReceiptFilterRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteReceiptFilterRequest(_a0 *ses.DeleteReceiptFilterInput) (*request.Request, *ses.DeleteReceiptFilterOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteReceiptFilterInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteReceiptFilterOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteReceiptFilterInput) *ses.DeleteReceiptFilterOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteReceiptFilterOutput)
		}
	}

	return r0, r1
}

// DeleteReceiptFilterWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteReceiptFilterWithContext(_a0 context.Context, _a1 *ses.DeleteReceiptFilterInput, _a2 ...request.Option) (*ses.DeleteReceiptFilterOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteReceiptFilterOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteReceiptFilterInput, ...request.Option) *ses.DeleteReceiptFilterOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteReceiptFilterOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteReceiptFilterInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteReceiptRule provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteReceiptRule(_a0 *ses.DeleteReceiptRuleInput) (*ses.DeleteReceiptRuleOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteReceiptRuleOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteReceiptRuleInput) *ses.DeleteReceiptRuleOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteReceiptRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteReceiptRuleInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteReceiptRuleRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteReceiptRuleRequest(_a0 *ses.DeleteReceiptRuleInput) (*request.Request, *ses.DeleteReceiptRuleOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteReceiptRuleInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteReceiptRuleOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteReceiptRuleInput) *ses.DeleteReceiptRuleOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteReceiptRuleOutput)
		}
	}

	return r0, r1
}

// DeleteReceiptRuleSet provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteReceiptRuleSet(_a0 *ses.DeleteReceiptRuleSetInput) (*ses.DeleteReceiptRuleSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteReceiptRuleSetInput) *ses.DeleteReceiptRuleSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteReceiptRuleSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteReceiptRuleSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteReceiptRuleSetRequest(_a0 *ses.DeleteReceiptRuleSetInput) (*request.Request, *ses.DeleteReceiptRuleSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteReceiptRuleSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteReceiptRuleSetOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteReceiptRuleSetInput) *ses.DeleteReceiptRuleSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteReceiptRuleSetOutput)
		}
	}

	return r0, r1
}

// DeleteReceiptRuleSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteReceiptRuleSetWithContext(_a0 context.Context, _a1 *ses.DeleteReceiptRuleSetInput, _a2 ...request.Option) (*ses.DeleteReceiptRuleSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteReceiptRuleSetInput, ...request.Option) *ses.DeleteReceiptRuleSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteReceiptRuleSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteReceiptRuleWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteReceiptRuleWithContext(_a0 context.Context, _a1 *ses.DeleteReceiptRuleInput, _a2 ...request.Option) (*ses.DeleteReceiptRuleOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteReceiptRuleOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteReceiptRuleInput, ...request.Option) *ses.DeleteReceiptRuleOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteReceiptRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteReceiptRuleInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteTemplate provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteTemplate(_a0 *ses.DeleteTemplateInput) (*ses.DeleteTemplateOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteTemplateOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteTemplateInput) *ses.DeleteTemplateOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteTemplateInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteTemplateRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteTemplateRequest(_a0 *ses.DeleteTemplateInput) (*request.Request, *ses.DeleteTemplateOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteTemplateInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteTemplateOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteTemplateInput) *ses.DeleteTemplateOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteTemplateOutput)
		}
	}

	return r0, r1
}

// DeleteTemplateWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteTemplateWithContext(_a0 context.Context, _a1 *ses.DeleteTemplateInput, _a2 ...request.Option) (*ses.DeleteTemplateOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteTemplateOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteTemplateInput, ...request.Option) *ses.DeleteTemplateOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteTemplateInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteVerifiedEmailAddress provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteVerifiedEmailAddress(_a0 *ses.DeleteVerifiedEmailAddressInput) (*ses.DeleteVerifiedEmailAddressOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DeleteVerifiedEmailAddressOutput
	if rf, ok := ret.Get(0).(func(*ses.DeleteVerifiedEmailAddressInput) *ses.DeleteVerifiedEmailAddressOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteVerifiedEmailAddressOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DeleteVerifiedEmailAddressInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteVerifiedEmailAddressRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DeleteVerifiedEmailAddressRequest(_a0 *ses.DeleteVerifiedEmailAddressInput) (*request.Request, *ses.DeleteVerifiedEmailAddressOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DeleteVerifiedEmailAddressInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DeleteVerifiedEmailAddressOutput
	if rf, ok := ret.Get(1).(func(*ses.DeleteVerifiedEmailAddressInput) *ses.DeleteVerifiedEmailAddressOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DeleteVerifiedEmailAddressOutput)
		}
	}

	return r0, r1
}

// DeleteVerifiedEmailAddressWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DeleteVerifiedEmailAddressWithContext(_a0 context.Context, _a1 *ses.DeleteVerifiedEmailAddressInput, _a2 ...request.Option) (*ses.DeleteVerifiedEmailAddressOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DeleteVerifiedEmailAddressOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DeleteVerifiedEmailAddressInput, ...request.Option) *ses.DeleteVerifiedEmailAddressOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DeleteVerifiedEmailAddressOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DeleteVerifiedEmailAddressInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeActiveReceiptRuleSet provides a mock function with given fields: _a0
func (_m *SESAPI) DescribeActiveReceiptRuleSet(_a0 *ses.DescribeActiveReceiptRuleSetInput) (*ses.DescribeActiveReceiptRuleSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DescribeActiveReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(*ses.DescribeActiveReceiptRuleSetInput) *ses.DescribeActiveReceiptRuleSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DescribeActiveReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DescribeActiveReceiptRuleSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeActiveReceiptRuleSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DescribeActiveReceiptRuleSetRequest(_a0 *ses.DescribeActiveReceiptRuleSetInput) (*request.Request, *ses.DescribeActiveReceiptRuleSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DescribeActiveReceiptRuleSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DescribeActiveReceiptRuleSetOutput
	if rf, ok := ret.Get(1).(func(*ses.DescribeActiveReceiptRuleSetInput) *ses.DescribeActiveReceiptRuleSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DescribeActiveReceiptRuleSetOutput)
		}
	}

	return r0, r1
}

// DescribeActiveReceiptRuleSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DescribeActiveReceiptRuleSetWithContext(_a0 context.Context, _a1 *ses.DescribeActiveReceiptRuleSetInput, _a2 ...request.Option) (*ses.DescribeActiveReceiptRuleSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DescribeActiveReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DescribeActiveReceiptRuleSetInput, ...request.Option) *ses.DescribeActiveReceiptRuleSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DescribeActiveReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DescribeActiveReceiptRuleSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeConfigurationSet provides a mock function with given fields: _a0
func (_m *SESAPI) DescribeConfigurationSet(_a0 *ses.DescribeConfigurationSetInput) (*ses.DescribeConfigurationSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DescribeConfigurationSetOutput
	if rf, ok := ret.Get(0).(func(*ses.DescribeConfigurationSetInput) *ses.DescribeConfigurationSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DescribeConfigurationSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DescribeConfigurationSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeConfigurationSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DescribeConfigurationSetRequest(_a0 *ses.DescribeConfigurationSetInput) (*request.Request, *ses.DescribeConfigurationSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DescribeConfigurationSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DescribeConfigurationSetOutput
	if rf, ok := ret.Get(1).(func(*ses.DescribeConfigurationSetInput) *ses.DescribeConfigurationSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DescribeConfigurationSetOutput)
		}
	}

	return r0, r1
}

// DescribeConfigurationSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DescribeConfigurationSetWithContext(_a0 context.Context, _a1 *ses.DescribeConfigurationSetInput, _a2 ...request.Option) (*ses.DescribeConfigurationSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DescribeConfigurationSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DescribeConfigurationSetInput, ...request.Option) *ses.DescribeConfigurationSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DescribeConfigurationSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DescribeConfigurationSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeReceiptRule provides a mock function with given fields: _a0
func (_m *SESAPI) DescribeReceiptRule(_a0 *ses.DescribeReceiptRuleInput) (*ses.DescribeReceiptRuleOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DescribeReceiptRuleOutput
	if rf, ok := ret.Get(0).(func(*ses.DescribeReceiptRuleInput) *ses.DescribeReceiptRuleOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DescribeReceiptRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DescribeReceiptRuleInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeReceiptRuleRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DescribeReceiptRuleRequest(_a0 *ses.DescribeReceiptRuleInput) (*request.Request, *ses.DescribeReceiptRuleOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DescribeReceiptRuleInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DescribeReceiptRuleOutput
	if rf, ok := ret.Get(1).(func(*ses.DescribeReceiptRuleInput) *ses.DescribeReceiptRuleOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DescribeReceiptRuleOutput)
		}
	}

	return r0, r1
}

// DescribeReceiptRuleSet provides a mock function with given fields: _a0
func (_m *SESAPI) DescribeReceiptRuleSet(_a0 *ses.DescribeReceiptRuleSetInput) (*ses.DescribeReceiptRuleSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.DescribeReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(*ses.DescribeReceiptRuleSetInput) *ses.DescribeReceiptRuleSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DescribeReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.DescribeReceiptRuleSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeReceiptRuleSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) DescribeReceiptRuleSetRequest(_a0 *ses.DescribeReceiptRuleSetInput) (*request.Request, *ses.DescribeReceiptRuleSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.DescribeReceiptRuleSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.DescribeReceiptRuleSetOutput
	if rf, ok := ret.Get(1).(func(*ses.DescribeReceiptRuleSetInput) *ses.DescribeReceiptRuleSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.DescribeReceiptRuleSetOutput)
		}
	}

	return r0, r1
}

// DescribeReceiptRuleSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DescribeReceiptRuleSetWithContext(_a0 context.Context, _a1 *ses.DescribeReceiptRuleSetInput, _a2 ...request.Option) (*ses.DescribeReceiptRuleSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DescribeReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DescribeReceiptRuleSetInput, ...request.Option) *ses.DescribeReceiptRuleSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DescribeReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DescribeReceiptRuleSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeReceiptRuleWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) DescribeReceiptRuleWithContext(_a0 context.Context, _a1 *ses.DescribeReceiptRuleInput, _a2 ...request.Option) (*ses.DescribeReceiptRuleOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.DescribeReceiptRuleOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.DescribeReceiptRuleInput, ...request.Option) *ses.DescribeReceiptRuleOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.DescribeReceiptRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.DescribeReceiptRuleInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAccountSendingEnabled provides a mock function with given fields: _a0
func (_m *SESAPI) GetAccountSendingEnabled(_a0 *ses.GetAccountSendingEnabledInput) (*ses.GetAccountSendingEnabledOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetAccountSendingEnabledOutput
	if rf, ok := ret.Get(0).(func(*ses.GetAccountSendingEnabledInput) *ses.GetAccountSendingEnabledOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetAccountSendingEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetAccountSendingEnabledInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAccountSendingEnabledRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetAccountSendingEnabledRequest(_a0 *ses.GetAccountSendingEnabledInput) (*request.Request, *ses.GetAccountSendingEnabledOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetAccountSendingEnabledInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetAccountSendingEnabledOutput
	if rf, ok := ret.Get(1).(func(*ses.GetAccountSendingEnabledInput) *ses.GetAccountSendingEnabledOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetAccountSendingEnabledOutput)
		}
	}

	return r0, r1
}

// GetAccountSendingEnabledWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetAccountSendingEnabledWithContext(_a0 context.Context, _a1 *ses.GetAccountSendingEnabledInput, _a2 ...request.Option) (*ses.GetAccountSendingEnabledOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetAccountSendingEnabledOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetAccountSendingEnabledInput, ...request.Option) *ses.GetAccountSendingEnabledOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetAccountSendingEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetAccountSendingEnabledInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCustomVerificationEmailTemplate provides a mock function with given fields: _a0
func (_m *SESAPI) GetCustomVerificationEmailTemplate(_a0 *ses.GetCustomVerificationEmailTemplateInput) (*ses.GetCustomVerificationEmailTemplateOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(0).(func(*ses.GetCustomVerificationEmailTemplateInput) *ses.GetCustomVerificationEmailTemplateOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetCustomVerificationEmailTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetCustomVerificationEmailTemplateInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCustomVerificationEmailTemplateRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetCustomVerificationEmailTemplateRequest(_a0 *ses.GetCustomVerificationEmailTemplateInput) (*request.Request, *ses.GetCustomVerificationEmailTemplateOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetCustomVerificationEmailTemplateInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(1).(func(*ses.GetCustomVerificationEmailTemplateInput) *ses.GetCustomVerificationEmailTemplateOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetCustomVerificationEmailTemplateOutput)
		}
	}

	return r0, r1
}

// GetCustomVerificationEmailTemplateWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetCustomVerificationEmailTemplateWithContext(_a0 context.Context, _a1 *ses.GetCustomVerificationEmailTemplateInput, _a2 ...request.Option) (*ses.GetCustomVerificationEmailTemplateOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetCustomVerificationEmailTemplateInput, ...request.Option) *ses.GetCustomVerificationEmailTemplateOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetCustomVerificationEmailTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetCustomVerificationEmailTemplateInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityDkimAttributes provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityDkimAttributes(_a0 *ses.GetIdentityDkimAttributesInput) (*ses.GetIdentityDkimAttributesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetIdentityDkimAttributesOutput
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityDkimAttributesInput) *ses.GetIdentityDkimAttributesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityDkimAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityDkimAttributesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityDkimAttributesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityDkimAttributesRequest(_a0 *ses.GetIdentityDkimAttributesInput) (*request.Request, *ses.GetIdentityDkimAttributesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityDkimAttributesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetIdentityDkimAttributesOutput
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityDkimAttributesInput) *ses.GetIdentityDkimAttributesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetIdentityDkimAttributesOutput)
		}
	}

	return r0, r1
}

// GetIdentityDkimAttributesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetIdentityDkimAttributesWithContext(_a0 context.Context, _a1 *ses.GetIdentityDkimAttributesInput, _a2 ...request.Option) (*ses.GetIdentityDkimAttributesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetIdentityDkimAttributesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetIdentityDkimAttributesInput, ...request.Option) *ses.GetIdentityDkimAttributesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityDkimAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetIdentityDkimAttributesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityMailFromDomainAttributes provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityMailFromDomainAttributes(_a0 *ses.GetIdentityMailFromDomainAttributesInput) (*ses.GetIdentityMailFromDomainAttributesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetIdentityMailFromDomainAttributesOutput
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityMailFromDomainAttributesInput) *ses.GetIdentityMailFromDomainAttributesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityMailFromDomainAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityMailFromDomainAttributesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityMailFromDomainAttributesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityMailFromDomainAttributesRequest(_a0 *ses.GetIdentityMailFromDomainAttributesInput) (*request.Request, *ses.GetIdentityMailFromDomainAttributesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityMailFromDomainAttributesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetIdentityMailFromDomainAttributesOutput
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityMailFromDomainAttributesInput) *ses.GetIdentityMailFromDomainAttributesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetIdentityMailFromDomainAttributesOutput)
		}
	}

	return r0, r1
}

// GetIdentityMailFromDomainAttributesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetIdentityMailFromDomainAttributesWithContext(_a0 context.Context, _a1 *ses.GetIdentityMailFromDomainAttributesInput, _a2 ...request.Option) (*ses.GetIdentityMailFromDomainAttributesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetIdentityMailFromDomainAttributesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetIdentityMailFromDomainAttributesInput, ...request.Option) *ses.GetIdentityMailFromDomainAttributesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityMailFromDomainAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetIdentityMailFromDomainAttributesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityNotificationAttributes provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityNotificationAttributes(_a0 *ses.GetIdentityNotificationAttributesInput) (*ses.GetIdentityNotificationAttributesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetIdentityNotificationAttributesOutput
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityNotificationAttributesInput) *ses.GetIdentityNotificationAttributesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityNotificationAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityNotificationAttributesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityNotificationAttributesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityNotificationAttributesRequest(_a0 *ses.GetIdentityNotificationAttributesInput) (*request.Request, *ses.GetIdentityNotificationAttributesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityNotificationAttributesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetIdentityNotificationAttributesOutput
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityNotificationAttributesInput) *ses.GetIdentityNotificationAttributesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetIdentityNotificationAttributesOutput)
		}
	}

	return r0, r1
}

// GetIdentityNotificationAttributesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetIdentityNotificationAttributesWithContext(_a0 context.Context, _a1 *ses.GetIdentityNotificationAttributesInput, _a2 ...request.Option) (*ses.GetIdentityNotificationAttributesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetIdentityNotificationAttributesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetIdentityNotificationAttributesInput, ...request.Option) *ses.GetIdentityNotificationAttributesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityNotificationAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetIdentityNotificationAttributesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityPolicies provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityPolicies(_a0 *ses.GetIdentityPoliciesInput) (*ses.GetIdentityPoliciesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetIdentityPoliciesOutput
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityPoliciesInput) *ses.GetIdentityPoliciesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityPoliciesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityPoliciesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityPoliciesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityPoliciesRequest(_a0 *ses.GetIdentityPoliciesInput) (*request.Request, *ses.GetIdentityPoliciesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityPoliciesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetIdentityPoliciesOutput
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityPoliciesInput) *ses.GetIdentityPoliciesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetIdentityPoliciesOutput)
		}
	}

	return r0, r1
}

// GetIdentityPoliciesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetIdentityPoliciesWithContext(_a0 context.Context, _a1 *ses.GetIdentityPoliciesInput, _a2 ...request.Option) (*ses.GetIdentityPoliciesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetIdentityPoliciesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetIdentityPoliciesInput, ...request.Option) *ses.GetIdentityPoliciesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityPoliciesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetIdentityPoliciesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityVerificationAttributes provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityVerificationAttributes(_a0 *ses.GetIdentityVerificationAttributesInput) (*ses.GetIdentityVerificationAttributesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetIdentityVerificationAttributesOutput
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityVerificationAttributesInput) *ses.GetIdentityVerificationAttributesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityVerificationAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityVerificationAttributesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIdentityVerificationAttributesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetIdentityVerificationAttributesRequest(_a0 *ses.GetIdentityVerificationAttributesInput) (*request.Request, *ses.GetIdentityVerificationAttributesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityVerificationAttributesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetIdentityVerificationAttributesOutput
	if rf, ok := ret.Get(1).(func(*ses.GetIdentityVerificationAttributesInput) *ses.GetIdentityVerificationAttributesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetIdentityVerificationAttributesOutput)
		}
	}

	return r0, r1
}

// GetIdentityVerificationAttributesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetIdentityVerificationAttributesWithContext(_a0 context.Context, _a1 *ses.GetIdentityVerificationAttributesInput, _a2 ...request.Option) (*ses.GetIdentityVerificationAttributesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetIdentityVerificationAttributesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetIdentityVerificationAttributesInput, ...request.Option) *ses.GetIdentityVerificationAttributesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetIdentityVerificationAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetIdentityVerificationAttributesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSendQuota provides a mock function with given fields: _a0
func (_m *SESAPI) GetSendQuota(_a0 *ses.GetSendQuotaInput) (*ses.GetSendQuotaOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetSendQuotaOutput
	if rf, ok := ret.Get(0).(func(*ses.GetSendQuotaInput) *ses.GetSendQuotaOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetSendQuotaOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetSendQuotaInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSendQuotaRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetSendQuotaRequest(_a0 *ses.GetSendQuotaInput) (*request.Request, *ses.GetSendQuotaOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetSendQuotaInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetSendQuotaOutput
	if rf, ok := ret.Get(1).(func(*ses.GetSendQuotaInput) *ses.GetSendQuotaOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetSendQuotaOutput)
		}
	}

	return r0, r1
}

// GetSendQuotaWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetSendQuotaWithContext(_a0 context.Context, _a1 *ses.GetSendQuotaInput, _a2 ...request.Option) (*ses.GetSendQuotaOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetSendQuotaOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetSendQuotaInput, ...request.Option) *ses.GetSendQuotaOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetSendQuotaOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetSendQuotaInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSendStatistics provides a mock function with given fields: _a0
func (_m *SESAPI) GetSendStatistics(_a0 *ses.GetSendStatisticsInput) (*ses.GetSendStatisticsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetSendStatisticsOutput
	if rf, ok := ret.Get(0).(func(*ses.GetSendStatisticsInput) *ses.GetSendStatisticsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetSendStatisticsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetSendStatisticsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSendStatisticsRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetSendStatisticsRequest(_a0 *ses.GetSendStatisticsInput) (*request.Request, *ses.GetSendStatisticsOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetSendStatisticsInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetSendStatisticsOutput
	if rf, ok := ret.Get(1).(func(*ses.GetSendStatisticsInput) *ses.GetSendStatisticsOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetSendStatisticsOutput)
		}
	}

	return r0, r1
}

// GetSendStatisticsWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetSendStatisticsWithContext(_a0 context.Context, _a1 *ses.GetSendStatisticsInput, _a2 ...request.Option) (*ses.GetSendStatisticsOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetSendStatisticsOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetSendStatisticsInput, ...request.Option) *ses.GetSendStatisticsOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetSendStatisticsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetSendStatisticsInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTemplate provides a mock function with given fields: _a0
func (_m *SESAPI) GetTemplate(_a0 *ses.GetTemplateInput) (*ses.GetTemplateOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.GetTemplateOutput
	if rf, ok := ret.Get(0).(func(*ses.GetTemplateInput) *ses.GetTemplateOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.GetTemplateInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTemplateRequest provides a mock function with given fields: _a0
func (_m *SESAPI) GetTemplateRequest(_a0 *ses.GetTemplateInput) (*request.Request, *ses.GetTemplateOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.GetTemplateInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.GetTemplateOutput
	if rf, ok := ret.Get(1).(func(*ses.GetTemplateInput) *ses.GetTemplateOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.GetTemplateOutput)
		}
	}

	return r0, r1
}

// GetTemplateWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) GetTemplateWithContext(_a0 context.Context, _a1 *ses.GetTemplateInput, _a2 ...request.Option) (*ses.GetTemplateOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.GetTemplateOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetTemplateInput, ...request.Option) *ses.GetTemplateOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.GetTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.GetTemplateInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListConfigurationSets provides a mock function with given fields: _a0
func (_m *SESAPI) ListConfigurationSets(_a0 *ses.ListConfigurationSetsInput) (*ses.ListConfigurationSetsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.ListConfigurationSetsOutput
	if rf, ok := ret.Get(0).(func(*ses.ListConfigurationSetsInput) *ses.ListConfigurationSetsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListConfigurationSetsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.ListConfigurationSetsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListConfigurationSetsRequest provides a mock function with given fields: _a0
func (_m *SESAPI) ListConfigurationSetsRequest(_a0 *ses.ListConfigurationSetsInput) (*request.Request, *ses.ListConfigurationSetsOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.ListConfigurationSetsInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.ListConfigurationSetsOutput
	if rf, ok := ret.Get(1).(func(*ses.ListConfigurationSetsInput) *ses.ListConfigurationSetsOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.ListConfigurationSetsOutput)
		}
	}

	return r0, r1
}

// ListConfigurationSetsWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) ListConfigurationSetsWithContext(_a0 context.Context, _a1 *ses.ListConfigurationSetsInput, _a2 ...request.Option) (*ses.ListConfigurationSetsOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.ListConfigurationSetsOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListConfigurationSetsInput, ...request.Option) *ses.ListConfigurationSetsOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListConfigurationSetsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.ListConfigurationSetsInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListCustomVerificationEmailTemplates provides a mock function with given fields: _a0
func (_m *SESAPI) ListCustomVerificationEmailTemplates(_a0 *ses.ListCustomVerificationEmailTemplatesInput) (*ses.ListCustomVerificationEmailTemplatesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.ListCustomVerificationEmailTemplatesOutput
	if rf, ok := ret.Get(0).(func(*ses.ListCustomVerificationEmailTemplatesInput) *ses.ListCustomVerificationEmailTemplatesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListCustomVerificationEmailTemplatesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.ListCustomVerificationEmailTemplatesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListCustomVerificationEmailTemplatesPages provides a mock function with given fields: _a0, _a1
func (_m *SESAPI) ListCustomVerificationEmailTemplatesPages(_a0 *ses.ListCustomVerificationEmailTemplatesInput, _a1 func(*ses.ListCustomVerificationEmailTemplatesOutput, bool) bool) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*ses.ListCustomVerificationEmailTemplatesInput, func(*ses.ListCustomVerificationEmailTemplatesOutput, bool) bool) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListCustomVerificationEmailTemplatesPagesWithContext provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *SESAPI) ListCustomVerificationEmailTemplatesPagesWithContext(_a0 context.Context, _a1 *ses.ListCustomVerificationEmailTemplatesInput, _a2 func(*ses.ListCustomVerificationEmailTemplatesOutput, bool) bool, _a3 ...request.Option) error {
	_va := make([]interface{}, len(_a3))
	for _i := range _a3 {
		_va[_i] = _a3[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1, _a2)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListCustomVerificationEmailTemplatesInput, func(*ses.ListCustomVerificationEmailTemplatesOutput, bool) bool, ...request.Option) error); ok {
		r0 = rf(_a0, _a1, _a2, _a3...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListCustomVerificationEmailTemplatesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) ListCustomVerificationEmailTemplatesRequest(_a0 *ses.ListCustomVerificationEmailTemplatesInput) (*request.Request, *ses.ListCustomVerificationEmailTemplatesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.ListCustomVerificationEmailTemplatesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.ListCustomVerificationEmailTemplatesOutput
	if rf, ok := ret.Get(1).(func(*ses.ListCustomVerificationEmailTemplatesInput) *ses.ListCustomVerificationEmailTemplatesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.ListCustomVerificationEmailTemplatesOutput)
		}
	}

	return r0, r1
}

// ListCustomVerificationEmailTemplatesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) ListCustomVerificationEmailTemplatesWithContext(_a0 context.Context, _a1 *ses.ListCustomVerificationEmailTemplatesInput, _a2 ...request.Option) (*ses.ListCustomVerificationEmailTemplatesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.ListCustomVerificationEmailTemplatesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListCustomVerificationEmailTemplatesInput, ...request.Option) *ses.ListCustomVerificationEmailTemplatesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListCustomVerificationEmailTemplatesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.ListCustomVerificationEmailTemplatesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListIdentities provides a mock function with given fields: _a0
func (_m *SESAPI) ListIdentities(_a0 *ses.ListIdentitiesInput) (*ses.ListIdentitiesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.ListIdentitiesOutput
	if rf, ok := ret.Get(0).(func(*ses.ListIdentitiesInput) *ses.ListIdentitiesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListIdentitiesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.ListIdentitiesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListIdentitiesPages provides a mock function with given fields: _a0, _a1
func (_m *SESAPI) ListIdentitiesPages(_a0 *ses.ListIdentitiesInput, _a1 func(*ses.ListIdentitiesOutput, bool) bool) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*ses.ListIdentitiesInput, func(*ses.ListIdentitiesOutput, bool) bool) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListIdentitiesPagesWithContext provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *SESAPI) ListIdentitiesPagesWithContext(_a0 context.Context, _a1 *ses.ListIdentitiesInput, _a2 func(*ses.ListIdentitiesOutput, bool) bool, _a3 ...request.Option) error {
	_va := make([]interface{}, len(_a3))
	for _i := range _a3 {
		_va[_i] = _a3[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1, _a2)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListIdentitiesInput, func(*ses.ListIdentitiesOutput, bool) bool, ...request.Option) error); ok {
		r0 = rf(_a0, _a1, _a2, _a3...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListIdentitiesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) ListIdentitiesRequest(_a0 *ses.ListIdentitiesInput) (*request.Request, *ses.ListIdentitiesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.ListIdentitiesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.ListIdentitiesOutput
	if rf, ok := ret.Get(1).(func(*ses.ListIdentitiesInput) *ses.ListIdentitiesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.ListIdentitiesOutput)
		}
	}

	return r0, r1
}

// ListIdentitiesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) ListIdentitiesWithContext(_a0 context.Context, _a1 *ses.ListIdentitiesInput, _a2 ...request.Option) (*ses.ListIdentitiesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.ListIdentitiesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListIdentitiesInput, ...request.Option) *ses.ListIdentitiesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListIdentitiesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.ListIdentitiesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListIdentityPolicies provides a mock function with given fields: _a0
func (_m *SESAPI) ListIdentityPolicies(_a0 *ses.ListIdentityPoliciesInput) (*ses.ListIdentityPoliciesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.ListIdentityPoliciesOutput
	if rf, ok := ret.Get(0).(func(*ses.ListIdentityPoliciesInput) *ses.ListIdentityPoliciesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListIdentityPoliciesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.ListIdentityPoliciesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListIdentityPoliciesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) ListIdentityPoliciesRequest(_a0 *ses.ListIdentityPoliciesInput) (*request.Request, *ses.ListIdentityPoliciesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.ListIdentityPoliciesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.ListIdentityPoliciesOutput
	if rf, ok := ret.Get(1).(func(*ses.ListIdentityPoliciesInput) *ses.ListIdentityPoliciesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.ListIdentityPoliciesOutput)
		}
	}

	return r0, r1
}

// ListIdentityPoliciesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) ListIdentityPoliciesWithContext(_a0 context.Context, _a1 *ses.ListIdentityPoliciesInput, _a2 ...request.Option) (*ses.ListIdentityPoliciesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.ListIdentityPoliciesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListIdentityPoliciesInput, ...request.Option) *ses.ListIdentityPoliciesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListIdentityPoliciesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.ListIdentityPoliciesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListReceiptFilters provides a mock function with given fields: _a0
func (_m *SESAPI) ListReceiptFilters(_a0 *ses.ListReceiptFiltersInput) (*ses.ListReceiptFiltersOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.ListReceiptFiltersOutput
	if rf, ok := ret.Get(0).(func(*ses.ListReceiptFiltersInput) *ses.ListReceiptFiltersOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListReceiptFiltersOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.ListReceiptFiltersInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListReceiptFiltersRequest provides a mock function with given fields: _a0
func (_m *SESAPI) ListReceiptFiltersRequest(_a0 *ses.ListReceiptFiltersInput) (*request.Request, *ses.ListReceiptFiltersOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.ListReceiptFiltersInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.ListReceiptFiltersOutput
	if rf, ok := ret.Get(1).(func(*ses.ListReceiptFiltersInput) *ses.ListReceiptFiltersOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.ListReceiptFiltersOutput)
		}
	}

	return r0, r1
}

// ListReceiptFiltersWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) ListReceiptFiltersWithContext(_a0 context.Context, _a1 *ses.ListReceiptFiltersInput, _a2 ...request.Option) (*ses.ListReceiptFiltersOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.ListReceiptFiltersOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListReceiptFiltersInput, ...request.Option) *ses.ListReceiptFiltersOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListReceiptFiltersOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.ListReceiptFiltersInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListReceiptRuleSets provides a mock function with given fields: _a0
func (_m *SESAPI) ListReceiptRuleSets(_a0 *ses.ListReceiptRuleSetsInput) (*ses.ListReceiptRuleSetsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.ListReceiptRuleSetsOutput
	if rf, ok := ret.Get(0).(func(*ses.ListReceiptRuleSetsInput) *ses.ListReceiptRuleSetsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListReceiptRuleSetsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.ListReceiptRuleSetsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListReceiptRuleSetsRequest provides a mock function with given fields: _a0
func (_m *SESAPI) ListReceiptRuleSetsRequest(_a0 *ses.ListReceiptRuleSetsInput) (*request.Request, *ses.ListReceiptRuleSetsOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.ListReceiptRuleSetsInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.ListReceiptRuleSetsOutput
	if rf, ok := ret.Get(1).(func(*ses.ListReceiptRuleSetsInput) *ses.ListReceiptRuleSetsOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.ListReceiptRuleSetsOutput)
		}
	}

	return r0, r1
}

// ListReceiptRuleSetsWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) ListReceiptRuleSetsWithContext(_a0 context.Context, _a1 *ses.ListReceiptRuleSetsInput, _a2 ...request.Option) (*ses.ListReceiptRuleSetsOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.ListReceiptRuleSetsOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListReceiptRuleSetsInput, ...request.Option) *ses.ListReceiptRuleSetsOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListReceiptRuleSetsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.ListReceiptRuleSetsInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTemplates provides a mock function with given fields: _a0
func (_m *SESAPI) ListTemplates(_a0 *ses.ListTemplatesInput) (*ses.ListTemplatesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.ListTemplatesOutput
	if rf, ok := ret.Get(0).(func(*ses.ListTemplatesInput) *ses.ListTemplatesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListTemplatesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.ListTemplatesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTemplatesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) ListTemplatesRequest(_a0 *ses.ListTemplatesInput) (*request.Request, *ses.ListTemplatesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.ListTemplatesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.ListTemplatesOutput
	if rf, ok := ret.Get(1).(func(*ses.ListTemplatesInput) *ses.ListTemplatesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.ListTemplatesOutput)
		}
	}

	return r0, r1
}

// ListTemplatesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) ListTemplatesWithContext(_a0 context.Context, _a1 *ses.ListTemplatesInput, _a2 ...request.Option) (*ses.ListTemplatesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.ListTemplatesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListTemplatesInput, ...request.Option) *ses.ListTemplatesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListTemplatesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.ListTemplatesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListVerifiedEmailAddresses provides a mock function with given fields: _a0
func (_m *SESAPI) ListVerifiedEmailAddresses(_a0 *ses.ListVerifiedEmailAddressesInput) (*ses.ListVerifiedEmailAddressesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.ListVerifiedEmailAddressesOutput
	if rf, ok := ret.Get(0).(func(*ses.ListVerifiedEmailAddressesInput) *ses.ListVerifiedEmailAddressesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListVerifiedEmailAddressesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.ListVerifiedEmailAddressesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListVerifiedEmailAddressesRequest provides a mock function with given fields: _a0
func (_m *SESAPI) ListVerifiedEmailAddressesRequest(_a0 *ses.ListVerifiedEmailAddressesInput) (*request.Request, *ses.ListVerifiedEmailAddressesOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.ListVerifiedEmailAddressesInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.ListVerifiedEmailAddressesOutput
	if rf, ok := ret.Get(1).(func(*ses.ListVerifiedEmailAddressesInput) *ses.ListVerifiedEmailAddressesOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.ListVerifiedEmailAddressesOutput)
		}
	}

	return r0, r1
}

// ListVerifiedEmailAddressesWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) ListVerifiedEmailAddressesWithContext(_a0 context.Context, _a1 *ses.ListVerifiedEmailAddressesInput, _a2 ...request.Option) (*ses.ListVerifiedEmailAddressesOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.ListVerifiedEmailAddressesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ListVerifiedEmailAddressesInput, ...request.Option) *ses.ListVerifiedEmailAddressesOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ListVerifiedEmailAddressesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.ListVerifiedEmailAddressesInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutConfigurationSetDeliveryOptions provides a mock function with given fields: _a0
func (_m *SESAPI) PutConfigurationSetDeliveryOptions(_a0 *ses.PutConfigurationSetDeliveryOptionsInput) (*ses.PutConfigurationSetDeliveryOptionsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.PutConfigurationSetDeliveryOptionsOutput
	if rf, ok := ret.Get(0).(func(*ses.PutConfigurationSetDeliveryOptionsInput) *ses.PutConfigurationSetDeliveryOptionsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.PutConfigurationSetDeliveryOptionsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.PutConfigurationSetDeliveryOptionsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutConfigurationSetDeliveryOptionsRequest provides a mock function with given fields: _a0
func (_m *SESAPI) PutConfigurationSetDeliveryOptionsRequest(_a0 *ses.PutConfigurationSetDeliveryOptionsInput) (*request.Request, *ses.PutConfigurationSetDeliveryOptionsOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.PutConfigurationSetDeliveryOptionsInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.PutConfigurationSetDeliveryOptionsOutput
	if rf, ok := ret.Get(1).(func(*ses.PutConfigurationSetDeliveryOptionsInput) *ses.PutConfigurationSetDeliveryOptionsOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.PutConfigurationSetDeliveryOptionsOutput)
		}
	}

	return r0, r1
}

// PutConfigurationSetDeliveryOptionsWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) PutConfigurationSetDeliveryOptionsWithContext(_a0 context.Context, _a1 *ses.PutConfigurationSetDeliveryOptionsInput, _a2 ...request.Option) (*ses.PutConfigurationSetDeliveryOptionsOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.PutConfigurationSetDeliveryOptionsOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.PutConfigurationSetDeliveryOptionsInput, ...request.Option) *ses.PutConfigurationSetDeliveryOptionsOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.PutConfigurationSetDeliveryOptionsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.PutConfigurationSetDeliveryOptionsInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutIdentityPolicy provides a mock function with given fields: _a0
func (_m *SESAPI) PutIdentityPolicy(_a0 *ses.PutIdentityPolicyInput) (*ses.PutIdentityPolicyOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.PutIdentityPolicyOutput
	if rf, ok := ret.Get(0).(func(*ses.PutIdentityPolicyInput) *ses.PutIdentityPolicyOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.PutIdentityPolicyOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.PutIdentityPolicyInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutIdentityPolicyRequest provides a mock function with given fields: _a0
func (_m *SESAPI) PutIdentityPolicyRequest(_a0 *ses.PutIdentityPolicyInput) (*request.Request, *ses.PutIdentityPolicyOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.PutIdentityPolicyInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.PutIdentityPolicyOutput
	if rf, ok := ret.Get(1).(func(*ses.PutIdentityPolicyInput) *ses.PutIdentityPolicyOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.PutIdentityPolicyOutput)
		}
	}

	return r0, r1
}

// PutIdentityPolicyWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) PutIdentityPolicyWithContext(_a0 context.Context, _a1 *ses.PutIdentityPolicyInput, _a2 ...request.Option) (*ses.PutIdentityPolicyOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.PutIdentityPolicyOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.PutIdentityPolicyInput, ...request.Option) *ses.PutIdentityPolicyOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.PutIdentityPolicyOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.PutIdentityPolicyInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReorderReceiptRuleSet provides a mock function with given fields: _a0
func (_m *SESAPI) ReorderReceiptRuleSet(_a0 *ses.ReorderReceiptRuleSetInput) (*ses.ReorderReceiptRuleSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.ReorderReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(*ses.ReorderReceiptRuleSetInput) *ses.ReorderReceiptRuleSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ReorderReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.ReorderReceiptRuleSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReorderReceiptRuleSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) ReorderReceiptRuleSetRequest(_a0 *ses.ReorderReceiptRuleSetInput) (*request.Request, *ses.ReorderReceiptRuleSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.ReorderReceiptRuleSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.ReorderReceiptRuleSetOutput
	if rf, ok := ret.Get(1).(func(*ses.ReorderReceiptRuleSetInput) *ses.ReorderReceiptRuleSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.ReorderReceiptRuleSetOutput)
		}
	}

	return r0, r1
}

// ReorderReceiptRuleSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) ReorderReceiptRuleSetWithContext(_a0 context.Context, _a1 *ses.ReorderReceiptRuleSetInput, _a2 ...request.Option) (*ses.ReorderReceiptRuleSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.ReorderReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.ReorderReceiptRuleSetInput, ...request.Option) *ses.ReorderReceiptRuleSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.ReorderReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.ReorderReceiptRuleSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendBounce provides a mock function with given fields: _a0
func (_m *SESAPI) SendBounce(_a0 *ses.SendBounceInput) (*ses.SendBounceOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SendBounceOutput
	if rf, ok := ret.Get(0).(func(*ses.SendBounceInput) *ses.SendBounceOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendBounceOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SendBounceInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendBounceRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SendBounceRequest(_a0 *ses.SendBounceInput) (*request.Request, *ses.SendBounceOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SendBounceInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SendBounceOutput
	if rf, ok := ret.Get(1).(func(*ses.SendBounceInput) *ses.SendBounceOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SendBounceOutput)
		}
	}

	return r0, r1
}

// SendBounceWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SendBounceWithContext(_a0 context.Context, _a1 *ses.SendBounceInput, _a2 ...request.Option) (*ses.SendBounceOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SendBounceOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SendBounceInput, ...request.Option) *ses.SendBounceOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendBounceOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SendBounceInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendBulkTemplatedEmail provides a mock function with given fields: _a0
func (_m *SESAPI) SendBulkTemplatedEmail(_a0 *ses.SendBulkTemplatedEmailInput) (*ses.SendBulkTemplatedEmailOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SendBulkTemplatedEmailOutput
	if rf, ok := ret.Get(0).(func(*ses.SendBulkTemplatedEmailInput) *ses.SendBulkTemplatedEmailOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendBulkTemplatedEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SendBulkTemplatedEmailInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendBulkTemplatedEmailRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SendBulkTemplatedEmailRequest(_a0 *ses.SendBulkTemplatedEmailInput) (*request.Request, *ses.SendBulkTemplatedEmailOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SendBulkTemplatedEmailInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SendBulkTemplatedEmailOutput
	if rf, ok := ret.Get(1).(func(*ses.SendBulkTemplatedEmailInput) *ses.SendBulkTemplatedEmailOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SendBulkTemplatedEmailOutput)
		}
	}

	return r0, r1
}

// SendBulkTemplatedEmailWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SendBulkTemplatedEmailWithContext(_a0 context.Context, _a1 *ses.SendBulkTemplatedEmailInput, _a2 ...request.Option) (*ses.SendBulkTemplatedEmailOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SendBulkTemplatedEmailOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SendBulkTemplatedEmailInput, ...request.Option) *ses.SendBulkTemplatedEmailOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendBulkTemplatedEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SendBulkTemplatedEmailInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendCustomVerificationEmail provides a mock function with given fields: _a0
func (_m *SESAPI) SendCustomVerificationEmail(_a0 *ses.SendCustomVerificationEmailInput) (*ses.SendCustomVerificationEmailOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SendCustomVerificationEmailOutput
	if rf, ok := ret.Get(0).(func(*ses.SendCustomVerificationEmailInput) *ses.SendCustomVerificationEmailOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendCustomVerificationEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SendCustomVerificationEmailInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendCustomVerificationEmailRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SendCustomVerificationEmailRequest(_a0 *ses.SendCustomVerificationEmailInput) (*request.Request, *ses.SendCustomVerificationEmailOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SendCustomVerificationEmailInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SendCustomVerificationEmailOutput
	if rf, ok := ret.Get(1).(func(*ses.SendCustomVerificationEmailInput) *ses.SendCustomVerificationEmailOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SendCustomVerificationEmailOutput)
		}
	}

	return r0, r1
}

// SendCustomVerificationEmailWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SendCustomVerificationEmailWithContext(_a0 context.Context, _a1 *ses.SendCustomVerificationEmailInput, _a2 ...request.Option) (*ses.SendCustomVerificationEmailOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SendCustomVerificationEmailOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SendCustomVerificationEmailInput, ...request.Option) *ses.SendCustomVerificationEmailOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendCustomVerificationEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SendCustomVerificationEmailInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendEmail provides a mock function with given fields: _a0
func (_m *SESAPI) SendEmail(_a0 *ses.SendEmailInput) (*ses.SendEmailOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SendEmailOutput
	if rf, ok := ret.Get(0).(func(*ses.SendEmailInput) *ses.SendEmailOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SendEmailInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendEmailRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SendEmailRequest(_a0 *ses.SendEmailInput) (*request.Request, *ses.SendEmailOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SendEmailInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SendEmailOutput
	if rf, ok := ret.Get(1).(func(*ses.SendEmailInput) *ses.SendEmailOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SendEmailOutput)
		}
	}

	return r0, r1
}

// SendEmailWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SendEmailWithContext(_a0 context.Context, _a1 *ses.SendEmailInput, _a2 ...request.Option) (*ses.SendEmailOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SendEmailOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SendEmailInput, ...request.Option) *ses.SendEmailOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SendEmailInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendRawEmail provides a mock function with given fields: _a0
func (_m *SESAPI) SendRawEmail(_a0 *ses.SendRawEmailInput) (*ses.SendRawEmailOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SendRawEmailOutput
	if rf, ok := ret.Get(0).(func(*ses.SendRawEmailInput) *ses.SendRawEmailOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendRawEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SendRawEmailInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendRawEmailRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SendRawEmailRequest(_a0 *ses.SendRawEmailInput) (*request.Request, *ses.SendRawEmailOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SendRawEmailInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SendRawEmailOutput
	if rf, ok := ret.Get(1).(func(*ses.SendRawEmailInput) *ses.SendRawEmailOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SendRawEmailOutput)
		}
	}

	return r0, r1
}

// SendRawEmailWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SendRawEmailWithContext(_a0 context.Context, _a1 *ses.SendRawEmailInput, _a2 ...request.Option) (*ses.SendRawEmailOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SendRawEmailOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SendRawEmailInput, ...request.Option) *ses.SendRawEmailOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendRawEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SendRawEmailInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendTemplatedEmail provides a mock function with given fields: _a0
func (_m *SESAPI) SendTemplatedEmail(_a0 *ses.SendTemplatedEmailInput) (*ses.SendTemplatedEmailOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SendTemplatedEmailOutput
	if rf, ok := ret.Get(0).(func(*ses.SendTemplatedEmailInput) *ses.SendTemplatedEmailOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendTemplatedEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SendTemplatedEmailInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendTemplatedEmailRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SendTemplatedEmailRequest(_a0 *ses.SendTemplatedEmailInput) (*request.Request, *ses.SendTemplatedEmailOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SendTemplatedEmailInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SendTemplatedEmailOutput
	if rf, ok := ret.Get(1).(func(*ses.SendTemplatedEmailInput) *ses.SendTemplatedEmailOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SendTemplatedEmailOutput)
		}
	}

	return r0, r1
}

// SendTemplatedEmailWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SendTemplatedEmailWithContext(_a0 context.Context, _a1 *ses.SendTemplatedEmailInput, _a2 ...request.Option) (*ses.SendTemplatedEmailOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SendTemplatedEmailOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SendTemplatedEmailInput, ...request.Option) *ses.SendTemplatedEmailOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendTemplatedEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SendTemplatedEmailInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetActiveReceiptRuleSet provides a mock function with given fields: _a0
func (_m *SESAPI) SetActiveReceiptRuleSet(_a0 *ses.SetActiveReceiptRuleSetInput) (*ses.SetActiveReceiptRuleSetOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SetActiveReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(*ses.SetActiveReceiptRuleSetInput) *ses.SetActiveReceiptRuleSetOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetActiveReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SetActiveReceiptRuleSetInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetActiveReceiptRuleSetRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SetActiveReceiptRuleSetRequest(_a0 *ses.SetActiveReceiptRuleSetInput) (*request.Request, *ses.SetActiveReceiptRuleSetOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SetActiveReceiptRuleSetInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SetActiveReceiptRuleSetOutput
	if rf, ok := ret.Get(1).(func(*ses.SetActiveReceiptRuleSetInput) *ses.SetActiveReceiptRuleSetOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SetActiveReceiptRuleSetOutput)
		}
	}

	return r0, r1
}

// SetActiveReceiptRuleSetWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SetActiveReceiptRuleSetWithContext(_a0 context.Context, _a1 *ses.SetActiveReceiptRuleSetInput, _a2 ...request.Option) (*ses.SetActiveReceiptRuleSetOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SetActiveReceiptRuleSetOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SetActiveReceiptRuleSetInput, ...request.Option) *ses.SetActiveReceiptRuleSetOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetActiveReceiptRuleSetOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SetActiveReceiptRuleSetInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityDkimEnabled provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityDkimEnabled(_a0 *ses.SetIdentityDkimEnabledInput) (*ses.SetIdentityDkimEnabledOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SetIdentityDkimEnabledOutput
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityDkimEnabledInput) *ses.SetIdentityDkimEnabledOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityDkimEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityDkimEnabledInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityDkimEnabledRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityDkimEnabledRequest(_a0 *ses.SetIdentityDkimEnabledInput) (*request.Request, *ses.SetIdentityDkimEnabledOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityDkimEnabledInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SetIdentityDkimEnabledOutput
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityDkimEnabledInput) *ses.SetIdentityDkimEnabledOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SetIdentityDkimEnabledOutput)
		}
	}

	return r0, r1
}

// SetIdentityDkimEnabledWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SetIdentityDkimEnabledWithContext(_a0 context.Context, _a1 *ses.SetIdentityDkimEnabledInput, _a2 ...request.Option) (*ses.SetIdentityDkimEnabledOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SetIdentityDkimEnabledOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SetIdentityDkimEnabledInput, ...request.Option) *ses.SetIdentityDkimEnabledOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityDkimEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SetIdentityDkimEnabledInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityFeedbackForwardingEnabled provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityFeedbackForwardingEnabled(_a0 *ses.SetIdentityFeedbackForwardingEnabledInput) (*ses.SetIdentityFeedbackForwardingEnabledOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SetIdentityFeedbackForwardingEnabledOutput
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityFeedbackForwardingEnabledInput) *ses.SetIdentityFeedbackForwardingEnabledOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityFeedbackForwardingEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityFeedbackForwardingEnabledInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityFeedbackForwardingEnabledRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityFeedbackForwardingEnabledRequest(_a0 *ses.SetIdentityFeedbackForwardingEnabledInput) (*request.Request, *ses.SetIdentityFeedbackForwardingEnabledOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityFeedbackForwardingEnabledInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SetIdentityFeedbackForwardingEnabledOutput
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityFeedbackForwardingEnabledInput) *ses.SetIdentityFeedbackForwardingEnabledOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SetIdentityFeedbackForwardingEnabledOutput)
		}
	}

	return r0, r1
}

// SetIdentityFeedbackForwardingEnabledWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SetIdentityFeedbackForwardingEnabledWithContext(_a0 context.Context, _a1 *ses.SetIdentityFeedbackForwardingEnabledInput, _a2 ...request.Option) (*ses.SetIdentityFeedbackForwardingEnabledOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SetIdentityFeedbackForwardingEnabledOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SetIdentityFeedbackForwardingEnabledInput, ...request.Option) *ses.SetIdentityFeedbackForwardingEnabledOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityFeedbackForwardingEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SetIdentityFeedbackForwardingEnabledInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityHeadersInNotificationsEnabled provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityHeadersInNotificationsEnabled(_a0 *ses.SetIdentityHeadersInNotificationsEnabledInput) (*ses.SetIdentityHeadersInNotificationsEnabledOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SetIdentityHeadersInNotificationsEnabledOutput
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityHeadersInNotificationsEnabledInput) *ses.SetIdentityHeadersInNotificationsEnabledOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityHeadersInNotificationsEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityHeadersInNotificationsEnabledInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityHeadersInNotificationsEnabledRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityHeadersInNotificationsEnabledRequest(_a0 *ses.SetIdentityHeadersInNotificationsEnabledInput) (*request.Request, *ses.SetIdentityHeadersInNotificationsEnabledOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityHeadersInNotificationsEnabledInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SetIdentityHeadersInNotificationsEnabledOutput
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityHeadersInNotificationsEnabledInput) *ses.SetIdentityHeadersInNotificationsEnabledOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SetIdentityHeadersInNotificationsEnabledOutput)
		}
	}

	return r0, r1
}

// SetIdentityHeadersInNotificationsEnabledWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SetIdentityHeadersInNotificationsEnabledWithContext(_a0 context.Context, _a1 *ses.SetIdentityHeadersInNotificationsEnabledInput, _a2 ...request.Option) (*ses.SetIdentityHeadersInNotificationsEnabledOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SetIdentityHeadersInNotificationsEnabledOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SetIdentityHeadersInNotificationsEnabledInput, ...request.Option) *ses.SetIdentityHeadersInNotificationsEnabledOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityHeadersInNotificationsEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SetIdentityHeadersInNotificationsEnabledInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityMailFromDomain provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityMailFromDomain(_a0 *ses.SetIdentityMailFromDomainInput) (*ses.SetIdentityMailFromDomainOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SetIdentityMailFromDomainOutput
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityMailFromDomainInput) *ses.SetIdentityMailFromDomainOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityMailFromDomainOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityMailFromDomainInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityMailFromDomainRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityMailFromDomainRequest(_a0 *ses.SetIdentityMailFromDomainInput) (*request.Request, *ses.SetIdentityMailFromDomainOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityMailFromDomainInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SetIdentityMailFromDomainOutput
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityMailFromDomainInput) *ses.SetIdentityMailFromDomainOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SetIdentityMailFromDomainOutput)
		}
	}

	return r0, r1
}

// SetIdentityMailFromDomainWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SetIdentityMailFromDomainWithContext(_a0 context.Context, _a1 *ses.SetIdentityMailFromDomainInput, _a2 ...request.Option) (*ses.SetIdentityMailFromDomainOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SetIdentityMailFromDomainOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SetIdentityMailFromDomainInput, ...request.Option) *ses.SetIdentityMailFromDomainOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityMailFromDomainOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SetIdentityMailFromDomainInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityNotificationTopic provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityNotificationTopic(_a0 *ses.SetIdentityNotificationTopicInput) (*ses.SetIdentityNotificationTopicOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SetIdentityNotificationTopicOutput
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityNotificationTopicInput) *ses.SetIdentityNotificationTopicOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityNotificationTopicOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityNotificationTopicInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIdentityNotificationTopicRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SetIdentityNotificationTopicRequest(_a0 *ses.SetIdentityNotificationTopicInput) (*request.Request, *ses.SetIdentityNotificationTopicOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SetIdentityNotificationTopicInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SetIdentityNotificationTopicOutput
	if rf, ok := ret.Get(1).(func(*ses.SetIdentityNotificationTopicInput) *ses.SetIdentityNotificationTopicOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SetIdentityNotificationTopicOutput)
		}
	}

	return r0, r1
}

// SetIdentityNotificationTopicWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SetIdentityNotificationTopicWithContext(_a0 context.Context, _a1 *ses.SetIdentityNotificationTopicInput, _a2 ...request.Option) (*ses.SetIdentityNotificationTopicOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SetIdentityNotificationTopicOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SetIdentityNotificationTopicInput, ...request.Option) *ses.SetIdentityNotificationTopicOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetIdentityNotificationTopicOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SetIdentityNotificationTopicInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetReceiptRulePosition provides a mock function with given fields: _a0
func (_m *SESAPI) SetReceiptRulePosition(_a0 *ses.SetReceiptRulePositionInput) (*ses.SetReceiptRulePositionOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.SetReceiptRulePositionOutput
	if rf, ok := ret.Get(0).(func(*ses.SetReceiptRulePositionInput) *ses.SetReceiptRulePositionOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetReceiptRulePositionOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.SetReceiptRulePositionInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetReceiptRulePositionRequest provides a mock function with given fields: _a0
func (_m *SESAPI) SetReceiptRulePositionRequest(_a0 *ses.SetReceiptRulePositionInput) (*request.Request, *ses.SetReceiptRulePositionOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.SetReceiptRulePositionInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.SetReceiptRulePositionOutput
	if rf, ok := ret.Get(1).(func(*ses.SetReceiptRulePositionInput) *ses.SetReceiptRulePositionOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.SetReceiptRulePositionOutput)
		}
	}

	return r0, r1
}

// SetReceiptRulePositionWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) SetReceiptRulePositionWithContext(_a0 context.Context, _a1 *ses.SetReceiptRulePositionInput, _a2 ...request.Option) (*ses.SetReceiptRulePositionOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SetReceiptRulePositionOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SetReceiptRulePositionInput, ...request.Option) *ses.SetReceiptRulePositionOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SetReceiptRulePositionOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SetReceiptRulePositionInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TestRenderTemplate provides a mock function with given fields: _a0
func (_m *SESAPI) TestRenderTemplate(_a0 *ses.TestRenderTemplateInput) (*ses.TestRenderTemplateOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.TestRenderTemplateOutput
	if rf, ok := ret.Get(0).(func(*ses.TestRenderTemplateInput) *ses.TestRenderTemplateOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.TestRenderTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.TestRenderTemplateInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TestRenderTemplateRequest provides a mock function with given fields: _a0
func (_m *SESAPI) TestRenderTemplateRequest(_a0 *ses.TestRenderTemplateInput) (*request.Request, *ses.TestRenderTemplateOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.TestRenderTemplateInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.TestRenderTemplateOutput
	if rf, ok := ret.Get(1).(func(*ses.TestRenderTemplateInput) *ses.TestRenderTemplateOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.TestRenderTemplateOutput)
		}
	}

	return r0, r1
}

// TestRenderTemplateWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) TestRenderTemplateWithContext(_a0 context.Context, _a1 *ses.TestRenderTemplateInput, _a2 ...request.Option) (*ses.TestRenderTemplateOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.TestRenderTemplateOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.TestRenderTemplateInput, ...request.Option) *ses.TestRenderTemplateOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.TestRenderTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.TestRenderTemplateInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAccountSendingEnabled provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateAccountSendingEnabled(_a0 *ses.UpdateAccountSendingEnabledInput) (*ses.UpdateAccountSendingEnabledOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.UpdateAccountSendingEnabledOutput
	if rf, ok := ret.Get(0).(func(*ses.UpdateAccountSendingEnabledInput) *ses.UpdateAccountSendingEnabledOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateAccountSendingEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.UpdateAccountSendingEnabledInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAccountSendingEnabledRequest provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateAccountSendingEnabledRequest(_a0 *ses.UpdateAccountSendingEnabledInput) (*request.Request, *ses.UpdateAccountSendingEnabledOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.UpdateAccountSendingEnabledInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.UpdateAccountSendingEnabledOutput
	if rf, ok := ret.Get(1).(func(*ses.UpdateAccountSendingEnabledInput) *ses.UpdateAccountSendingEnabledOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.UpdateAccountSendingEnabledOutput)
		}
	}

	return r0, r1
}

// UpdateAccountSendingEnabledWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) UpdateAccountSendingEnabledWithContext(_a0 context.Context, _a1 *ses.UpdateAccountSendingEnabledInput, _a2 ...request.Option) (*ses.UpdateAccountSendingEnabledOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.UpdateAccountSendingEnabledOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.UpdateAccountSendingEnabledInput, ...request.Option) *ses.UpdateAccountSendingEnabledOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateAccountSendingEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.UpdateAccountSendingEnabledInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationSetEventDestination provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateConfigurationSetEventDestination(_a0 *ses.UpdateConfigurationSetEventDestinationInput) (*ses.UpdateConfigurationSetEventDestinationOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.UpdateConfigurationSetEventDestinationOutput
	if rf, ok := ret.Get(0).(func(*ses.UpdateConfigurationSetEventDestinationInput) *ses.UpdateConfigurationSetEventDestinationOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateConfigurationSetEventDestinationOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.UpdateConfigurationSetEventDestinationInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationSetEventDestinationRequest provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateConfigurationSetEventDestinationRequest(_a0 *ses.UpdateConfigurationSetEventDestinationInput) (*request.Request, *ses.UpdateConfigurationSetEventDestinationOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.UpdateConfigurationSetEventDestinationInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.UpdateConfigurationSetEventDestinationOutput
	if rf, ok := ret.Get(1).(func(*ses.UpdateConfigurationSetEventDestinationInput) *ses.UpdateConfigurationSetEventDestinationOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.UpdateConfigurationSetEventDestinationOutput)
		}
	}

	return r0, r1
}

// UpdateConfigurationSetEventDestinationWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) UpdateConfigurationSetEventDestinationWithContext(_a0 context.Context, _a1 *ses.UpdateConfigurationSetEventDestinationInput, _a2 ...request.Option) (*ses.UpdateConfigurationSetEventDestinationOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.UpdateConfigurationSetEventDestinationOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.UpdateConfigurationSetEventDestinationInput, ...request.Option) *ses.UpdateConfigurationSetEventDestinationOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateConfigurationSetEventDestinationOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.UpdateConfigurationSetEventDestinationInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationSetReputationMetricsEnabled provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateConfigurationSetReputationMetricsEnabled(_a0 *ses.UpdateConfigurationSetReputationMetricsEnabledInput) (*ses.UpdateConfigurationSetReputationMetricsEnabledOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.UpdateConfigurationSetReputationMetricsEnabledOutput
	if rf, ok := ret.Get(0).(func(*ses.UpdateConfigurationSetReputationMetricsEnabledInput) *ses.UpdateConfigurationSetReputationMetricsEnabledOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateConfigurationSetReputationMetricsEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.UpdateConfigurationSetReputationMetricsEnabledInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationSetReputationMetricsEnabledRequest provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateConfigurationSetReputationMetricsEnabledRequest(_a0 *ses.UpdateConfigurationSetReputationMetricsEnabledInput) (*request.Request, *ses.UpdateConfigurationSetReputationMetricsEnabledOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.UpdateConfigurationSetReputationMetricsEnabledInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.UpdateConfigurationSetReputationMetricsEnabledOutput
	if rf, ok := ret.Get(1).(func(*ses.UpdateConfigurationSetReputationMetricsEnabledInput) *ses.UpdateConfigurationSetReputationMetricsEnabledOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.UpdateConfigurationSetReputationMetricsEnabledOutput)
		}
	}

	return r0, r1
}

// UpdateConfigurationSetReputationMetricsEnabledWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) UpdateConfigurationSetReputationMetricsEnabledWithContext(_a0 context.Context, _a1 *ses.UpdateConfigurationSetReputationMetricsEnabledInput, _a2 ...request.Option) (*ses.UpdateConfigurationSetReputationMetricsEnabledOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.UpdateConfigurationSetReputationMetricsEnabledOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.UpdateConfigurationSetReputationMetricsEnabledInput, ...request.Option) *ses.UpdateConfigurationSetReputationMetricsEnabledOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateConfigurationSetReputationMetricsEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.UpdateConfigurationSetReputationMetricsEnabledInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationSetSendingEnabled provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateConfigurationSetSendingEnabled(_a0 *ses.UpdateConfigurationSetSendingEnabledInput) (*ses.UpdateConfigurationSetSendingEnabledOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.UpdateConfigurationSetSendingEnabledOutput
	if rf, ok := ret.Get(0).(func(*ses.UpdateConfigurationSetSendingEnabledInput) *ses.UpdateConfigurationSetSendingEnabledOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateConfigurationSetSendingEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.UpdateConfigurationSetSendingEnabledInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationSetSendingEnabledRequest provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateConfigurationSetSendingEnabledRequest(_a0 *ses.UpdateConfigurationSetSendingEnabledInput) (*request.Request, *ses.UpdateConfigurationSetSendingEnabledOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.UpdateConfigurationSetSendingEnabledInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.UpdateConfigurationSetSendingEnabledOutput
	if rf, ok := ret.Get(1).(func(*ses.UpdateConfigurationSetSendingEnabledInput) *ses.UpdateConfigurationSetSendingEnabledOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.UpdateConfigurationSetSendingEnabledOutput)
		}
	}

	return r0, r1
}

// UpdateConfigurationSetSendingEnabledWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) UpdateConfigurationSetSendingEnabledWithContext(_a0 context.Context, _a1 *ses.UpdateConfigurationSetSendingEnabledInput, _a2 ...request.Option) (*ses.UpdateConfigurationSetSendingEnabledOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.UpdateConfigurationSetSendingEnabledOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.UpdateConfigurationSetSendingEnabledInput, ...request.Option) *ses.UpdateConfigurationSetSendingEnabledOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateConfigurationSetSendingEnabledOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.UpdateConfigurationSetSendingEnabledInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationSetTrackingOptions provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateConfigurationSetTrackingOptions(_a0 *ses.UpdateConfigurationSetTrackingOptionsInput) (*ses.UpdateConfigurationSetTrackingOptionsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.UpdateConfigurationSetTrackingOptionsOutput
	if rf, ok := ret.Get(0).(func(*ses.UpdateConfigurationSetTrackingOptionsInput) *ses.UpdateConfigurationSetTrackingOptionsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateConfigurationSetTrackingOptionsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.UpdateConfigurationSetTrackingOptionsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationSetTrackingOptionsRequest provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateConfigurationSetTrackingOptionsRequest(_a0 *ses.UpdateConfigurationSetTrackingOptionsInput) (*request.Request, *ses.UpdateConfigurationSetTrackingOptionsOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.UpdateConfigurationSetTrackingOptionsInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.UpdateConfigurationSetTrackingOptionsOutput
	if rf, ok := ret.Get(1).(func(*ses.UpdateConfigurationSetTrackingOptionsInput) *ses.UpdateConfigurationSetTrackingOptionsOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.UpdateConfigurationSetTrackingOptionsOutput)
		}
	}

	return r0, r1
}

// UpdateConfigurationSetTrackingOptionsWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) UpdateConfigurationSetTrackingOptionsWithContext(_a0 context.Context, _a1 *ses.UpdateConfigurationSetTrackingOptionsInput, _a2 ...request.Option) (*ses.UpdateConfigurationSetTrackingOptionsOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.UpdateConfigurationSetTrackingOptionsOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.UpdateConfigurationSetTrackingOptionsInput, ...request.Option) *ses.UpdateConfigurationSetTrackingOptionsOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateConfigurationSetTrackingOptionsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.UpdateConfigurationSetTrackingOptionsInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCustomVerificationEmailTemplate provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateCustomVerificationEmailTemplate(_a0 *ses.UpdateCustomVerificationEmailTemplateInput) (*ses.UpdateCustomVerificationEmailTemplateOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.UpdateCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(0).(func(*ses.UpdateCustomVerificationEmailTemplateInput) *ses.UpdateCustomVerificationEmailTemplateOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateCustomVerificationEmailTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.UpdateCustomVerificationEmailTemplateInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCustomVerificationEmailTemplateRequest provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateCustomVerificationEmailTemplateRequest(_a0 *ses.UpdateCustomVerificationEmailTemplateInput) (*request.Request, *ses.UpdateCustomVerificationEmailTemplateOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.UpdateCustomVerificationEmailTemplateInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.UpdateCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(1).(func(*ses.UpdateCustomVerificationEmailTemplateInput) *ses.UpdateCustomVerificationEmailTemplateOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.UpdateCustomVerificationEmailTemplateOutput)
		}
	}

	return r0, r1
}

// UpdateCustomVerificationEmailTemplateWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) UpdateCustomVerificationEmailTemplateWithContext(_a0 context.Context, _a1 *ses.UpdateCustomVerificationEmailTemplateInput, _a2 ...request.Option) (*ses.UpdateCustomVerificationEmailTemplateOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.UpdateCustomVerificationEmailTemplateOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.UpdateCustomVerificationEmailTemplateInput, ...request.Option) *ses.UpdateCustomVerificationEmailTemplateOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateCustomVerificationEmailTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.UpdateCustomVerificationEmailTemplateInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateReceiptRule provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateReceiptRule(_a0 *ses.UpdateReceiptRuleInput) (*ses.UpdateReceiptRuleOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.UpdateReceiptRuleOutput
	if rf, ok := ret.Get(0).(func(*ses.UpdateReceiptRuleInput) *ses.UpdateReceiptRuleOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateReceiptRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.UpdateReceiptRuleInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateReceiptRuleRequest provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateReceiptRuleRequest(_a0 *ses.UpdateReceiptRuleInput) (*request.Request, *ses.UpdateReceiptRuleOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.UpdateReceiptRuleInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.UpdateReceiptRuleOutput
	if rf, ok := ret.Get(1).(func(*ses.UpdateReceiptRuleInput) *ses.UpdateReceiptRuleOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.UpdateReceiptRuleOutput)
		}
	}

	return r0, r1
}

// UpdateReceiptRuleWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) UpdateReceiptRuleWithContext(_a0 context.Context, _a1 *ses.UpdateReceiptRuleInput, _a2 ...request.Option) (*ses.UpdateReceiptRuleOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.UpdateReceiptRuleOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.UpdateReceiptRuleInput, ...request.Option) *ses.UpdateReceiptRuleOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateReceiptRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.UpdateReceiptRuleInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTemplate provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateTemplate(_a0 *ses.UpdateTemplateInput) (*ses.UpdateTemplateOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.UpdateTemplateOutput
	if rf, ok := ret.Get(0).(func(*ses.UpdateTemplateInput) *ses.UpdateTemplateOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.UpdateTemplateInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTemplateRequest provides a mock function with given fields: _a0
func (_m *SESAPI) UpdateTemplateRequest(_a0 *ses.UpdateTemplateInput) (*request.Request, *ses.UpdateTemplateOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.UpdateTemplateInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.UpdateTemplateOutput
	if rf, ok := ret.Get(1).(func(*ses.UpdateTemplateInput) *ses.UpdateTemplateOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.UpdateTemplateOutput)
		}
	}

	return r0, r1
}

// UpdateTemplateWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) UpdateTemplateWithContext(_a0 context.Context, _a1 *ses.UpdateTemplateInput, _a2 ...request.Option) (*ses.UpdateTemplateOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.UpdateTemplateOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.UpdateTemplateInput, ...request.Option) *ses.UpdateTemplateOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.UpdateTemplateOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.UpdateTemplateInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyDomainDkim provides a mock function with given fields: _a0
func (_m *SESAPI) VerifyDomainDkim(_a0 *ses.VerifyDomainDkimInput) (*ses.VerifyDomainDkimOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.VerifyDomainDkimOutput
	if rf, ok := ret.Get(0).(func(*ses.VerifyDomainDkimInput) *ses.VerifyDomainDkimOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.VerifyDomainDkimOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.VerifyDomainDkimInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyDomainDkimRequest provides a mock function with given fields: _a0
func (_m *SESAPI) VerifyDomainDkimRequest(_a0 *ses.VerifyDomainDkimInput) (*request.Request, *ses.VerifyDomainDkimOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.VerifyDomainDkimInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.VerifyDomainDkimOutput
	if rf, ok := ret.Get(1).(func(*ses.VerifyDomainDkimInput) *ses.VerifyDomainDkimOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.VerifyDomainDkimOutput)
		}
	}

	return r0, r1
}

// VerifyDomainDkimWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) VerifyDomainDkimWithContext(_a0 context.Context, _a1 *ses.VerifyDomainDkimInput, _a2 ...request.Option) (*ses.VerifyDomainDkimOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.VerifyDomainDkimOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.VerifyDomainDkimInput, ...request.Option) *ses.VerifyDomainDkimOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.VerifyDomainDkimOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.VerifyDomainDkimInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyDomainIdentity provides a mock function with given fields: _a0
func (_m *SESAPI) VerifyDomainIdentity(_a0 *ses.VerifyDomainIdentityInput) (*ses.VerifyDomainIdentityOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.VerifyDomainIdentityOutput
	if rf, ok := ret.Get(0).(func(*ses.VerifyDomainIdentityInput) *ses.VerifyDomainIdentityOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.VerifyDomainIdentityOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.VerifyDomainIdentityInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyDomainIdentityRequest provides a mock function with given fields: _a0
func (_m *SESAPI) VerifyDomainIdentityRequest(_a0 *ses.VerifyDomainIdentityInput) (*request.Request, *ses.VerifyDomainIdentityOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.VerifyDomainIdentityInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.VerifyDomainIdentityOutput
	if rf, ok := ret.Get(1).(func(*ses.VerifyDomainIdentityInput) *ses.VerifyDomainIdentityOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.VerifyDomainIdentityOutput)
		}
	}

	return r0, r1
}

// VerifyDomainIdentityWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) VerifyDomainIdentityWithContext(_a0 context.Context, _a1 *ses.VerifyDomainIdentityInput, _a2 ...request.Option) (*ses.VerifyDomainIdentityOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.VerifyDomainIdentityOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.VerifyDomainIdentityInput, ...request.Option) *ses.VerifyDomainIdentityOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.VerifyDomainIdentityOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.VerifyDomainIdentityInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyEmailAddress provides a mock function with given fields: _a0
func (_m *SESAPI) VerifyEmailAddress(_a0 *ses.VerifyEmailAddressInput) (*ses.VerifyEmailAddressOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.VerifyEmailAddressOutput
	if rf, ok := ret.Get(0).(func(*ses.VerifyEmailAddressInput) *ses.VerifyEmailAddressOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.VerifyEmailAddressOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.VerifyEmailAddressInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyEmailAddressRequest provides a mock function with given fields: _a0
func (_m *SESAPI) VerifyEmailAddressRequest(_a0 *ses.VerifyEmailAddressInput) (*request.Request, *ses.VerifyEmailAddressOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.VerifyEmailAddressInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.VerifyEmailAddressOutput
	if rf, ok := ret.Get(1).(func(*ses.VerifyEmailAddressInput) *ses.VerifyEmailAddressOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.VerifyEmailAddressOutput)
		}
	}

	return r0, r1
}

// VerifyEmailAddressWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) VerifyEmailAddressWithContext(_a0 context.Context, _a1 *ses.VerifyEmailAddressInput, _a2 ...request.Option) (*ses.VerifyEmailAddressOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.VerifyEmailAddressOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.VerifyEmailAddressInput, ...request.Option) *ses.VerifyEmailAddressOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.VerifyEmailAddressOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.VerifyEmailAddressInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyEmailIdentity provides a mock function with given fields: _a0
func (_m *SESAPI) VerifyEmailIdentity(_a0 *ses.VerifyEmailIdentityInput) (*ses.VerifyEmailIdentityOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ses.VerifyEmailIdentityOutput
	if rf, ok := ret.Get(0).(func(*ses.VerifyEmailIdentityInput) *ses.VerifyEmailIdentityOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.VerifyEmailIdentityOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ses.VerifyEmailIdentityInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyEmailIdentityRequest provides a mock function with given fields: _a0
func (_m *SESAPI) VerifyEmailIdentityRequest(_a0 *ses.VerifyEmailIdentityInput) (*request.Request, *ses.VerifyEmailIdentityOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*ses.VerifyEmailIdentityInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *ses.VerifyEmailIdentityOutput
	if rf, ok := ret.Get(1).(func(*ses.VerifyEmailIdentityInput) *ses.VerifyEmailIdentityOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*ses.VerifyEmailIdentityOutput)
		}
	}

	return r0, r1
}

// VerifyEmailIdentityWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) VerifyEmailIdentityWithContext(_a0 context.Context, _a1 *ses.VerifyEmailIdentityInput, _a2 ...request.Option) (*ses.VerifyEmailIdentityOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.VerifyEmailIdentityOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.VerifyEmailIdentityInput, ...request.Option) *ses.VerifyEmailIdentityOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.VerifyEmailIdentityOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.VerifyEmailIdentityInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WaitUntilIdentityExists provides a mock function with given fields: _a0
func (_m *SESAPI) WaitUntilIdentityExists(_a0 *ses.GetIdentityVerificationAttributesInput) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*ses.GetIdentityVerificationAttributesInput) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WaitUntilIdentityExistsWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *SESAPI) WaitUntilIdentityExistsWithContext(_a0 context.Context, _a1 *ses.GetIdentityVerificationAttributesInput, _a2 ...request.WaiterOption) error {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ses.GetIdentityVerificationAttributesInput, ...request.WaiterOption) error); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
